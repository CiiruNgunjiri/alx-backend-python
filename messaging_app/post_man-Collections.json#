{
  "info": {
    "_postman_id": "47094651-989b17ba-bbcb-4d4f-a27a-334ab9eda895",
    "name": "Messaging API - 127.0.0.1",
    "description": "Test messaging_app API endpoints with JWT Auth, conversations, and messages",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://127.0.0.1:8000",
      "description": "API base url with port"
    },
    {
      "key": "access_token",
      "value": "",
      "description": "JWT access token"
    },
    {
      "key": "refresh_token",
      "value": "",
      "description": "JWT refresh token"
    }
  ],
  "item": [
    {
      "name": "1. Obtain JWT Token",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/x-www-form-urlencoded"
          }
        ],
        "body": {
          "mode": "urlencoded",
          "urlencoded": [
            { "key": "username", "value": "your_username", "type": "text" },
            { "key": "password", "value": "your_password", "type": "text" }
          ]
        },
        "url": {
          "raw": "{{base_url}}/api/token/",
          "host": ["{{base_url}}"],
          "path": ["api", "token", ""]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "if(pm.response.code === 200){",
              "  var data = pm.response.json();",
              "  pm.environment.set('access_token', data.access);",
              "  pm.environment.set('refresh_token', data.refresh);",
              "  console.log('Access and refresh tokens saved.');",
              "} else {",
              "  console.error('Failed to obtain tokens.');",
              "}"
            ]
          }
        }
      ]
    },
    {
      "name": "2. Refresh JWT Token",
      "request": {
        "method": "POST",
        "header": [
          { "key": "Content-Type", "value": "application/x-www-form-urlencoded" }
        ],
        "body": {
          "mode": "urlencoded",
          "urlencoded": [
            { "key": "refresh", "value": "{{refresh_token}}", "type": "text" }
          ]
        },
        "url": {
          "raw": "{{base_url}}/api/token/refresh/",
          "host": ["{{base_url}}"],
          "path": ["api", "token", "refresh", ""]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "if(pm.response.code === 200) {",
              "  var data = pm.response.json();",
              "  pm.environment.set('access_token', data.access);",
              "  console.log('Access token refreshed.');",
              "} else {",
              "  console.error('Refresh token invalid or expired.');",
              "}"
            ]
          }
        }
      ]
    },
    {
      "name": "3. Verify JWT Token",
      "request": {
        "method": "POST",
        "header": [
          { "key": "Content-Type", "value": "application/x-www-form-urlencoded" }
        ],
        "body": {
          "mode": "urlencoded",
          "urlencoded": [
            { "key": "token", "value": "{{access_token}}", "type": "text" }
          ]
        },
        "url": {
          "raw": "{{base_url}}/api/token/verify/",
          "host": ["{{base_url}}"],
          "path": ["api", "token", "verify", ""]
        }
      }
    },
    {
      "name": "4. Create Conversation",
      "request": {
        "method": "POST",
        "header": [
          { "key": "Authorization", "value": "Bearer {{access_token}}" },
          { "key": "Content-Type", "value": "application/json" }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"title\": \"Project Chat\",\n  \"participants\": [\"user1\", \"user2\"]\n}",
          "options": { "raw": { "language": "json" } }
        },
        "url": {
          "raw": "{{base_url}}/api/conversations/",
          "host": ["{{base_url}}"],
          "path": ["api", "conversations", ""]
        }
      }
    },
    {
      "name": "5. Send Message",
      "request": {
        "method": "POST",
        "header": [
          { "key": "Authorization", "value": "Bearer {{access_token}}" },
          { "key": "Content-Type", "value": "application/json" }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"conversation\": 1,\n  \"content\": \"Hello team!\"\n}",
          "options": { "raw": { "language": "json" } }
        },
        "url": {
          "raw": "{{base_url}}/api/messages/",
          "host": ["{{base_url}}"],
          "path": ["api", "messages", ""]
        }
      }
    },
    {
      "name": "6. Get Conversations",
      "request": {
        "method": "GET",
        "header": [
          { "key": "Authorization", "value": "Bearer {{access_token}}" }
        ],
        "url": {
          "raw": "{{base_url}}/api/conversations/",
          "host": ["{{base_url}}"],
          "path": ["api", "conversations", ""]
        }
      }
    },
    {
      "name": "7. Get Messages",
      "request": {
        "method": "GET",
        "header": [
          { "key": "Authorization", "value": "Bearer {{access_token}}" }
        ],
        "url": {
          "raw": "{{base_url}}/api/messages/",
          "host": ["{{base_url}}"],
          "path": ["api", "messages", ""]
        }
      }
    },
    {
      "name": "8. Unauthorized Access Test - Conversations",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/api/conversations/",
          "host": ["{{base_url}}"],
          "path": ["api", "conversations", ""]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Unauthorized should return 401\", function () {",
              "    pm.response.to.have.status(401);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "9. Unauthorized Access Test - Messages",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/api/messages/",
          "host": ["{{base_url}}"],
          "path": ["api", "messages", ""]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Unauthorized should return 401\", function () {",
              "    pm.response.to.have.status(401);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    }
  ]
}
