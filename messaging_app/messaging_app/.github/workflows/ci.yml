name: Django CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
          MYSQL_DATABASE: testdb
          MYSQL_USER: testuser
          MYSQL_PASSWORD: testpassword
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    env:
      DATABASE_URL: mysql://testuser:testpassword@mysql:3306/testdb
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: testdb
      MYSQL_USER: testuser
      MYSQL_PASSWORD: testpassword

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Set up Python 3.x
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install -r messaging_app/requirements.txt
          python3 -m pip install flake8 pytest pytest-cov

      - name: Run flake8 Linting
        run: |
          flake8 messaging_app --count --max-complexity=10 --max-line-length=127 --statistics

      - name: Wait for MySQL to start
        run: |
          for i in {1..30}; do
            if mysqladmin ping -hmysql -uroot -prootpassword --silent; then
              echo "MySQL is up!"
              break
            fi
            echo "Waiting for MySQL..."
            sleep 2
          done

      - name: Run Django Tests with Coverage
        working-directory: messaging_app
        run: |
          coverage run manage.py test
          coverage xml
          coverage report

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: messaging_app/coverage.xml
